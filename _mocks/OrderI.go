package mocks

import helpers "github.com/lcollin/warehouse/helpers"
import mock "github.com/stretchr/testify/mock"
import models "github.com/lcollin/warehouse/models"
import uuid "github.com/pborman/uuid"

// OrderI is an autogenerated mock type for the OrderI type
type OrderI struct {
	mock.Mock
}

// Delete provides a mock function with given fields: _a0
func (_m *OrderI) Delete(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields: _a0, _a1
func (_m *OrderI) GetAll(_a0 int, _a1 int) ([]*models.Order, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []*models.Order
	if rf, ok := ret.Get(0).(func(int, int) []*models.Order); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: _a0
func (_m *OrderI) GetByID(_a0 string) (*models.Order, error) {
	ret := _m.Called(_a0)

	var r0 *models.Order
	if rf, ok := ret.Get(0).(func(string) *models.Order); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByUserID provides a mock function with given fields: _a0
func (_m *OrderI) GetByUserID(_a0 string) ([]*models.Order, error) {
	ret := _m.Called(_a0)

	var r0 []*models.Order
	if rf, ok := ret.Get(0).(func(string) []*models.Order); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetShippingLabel provides a mock function with given fields: id
func (_m *OrderI) GetShippingLabel(id uuid.UUID) (string, error) {
	ret := _m.Called(id)

	var r0 string
	if rf, ok := ret.Get(0).(func(uuid.UUID) string); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: _a0
func (_m *OrderI) Insert(_a0 *models.Order) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Order) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetStatus provides a mock function with given fields: id, status
func (_m *OrderI) SetStatus(id uuid.UUID, status models.OrderStatus) error {
	ret := _m.Called(id, status)

	var r0 error
	if rf, ok := ret.Get(0).(func(uuid.UUID, models.OrderStatus) error); ok {
		r0 = rf(id, status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: _a0
func (_m *OrderI) Update(_a0 *models.Order) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Order) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

var _ helpers.OrderI = (*OrderI)(nil)
